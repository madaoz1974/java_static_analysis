#!/bin/bash
# Pre-commit hook for strict quality gate - BLOCKS commits on violations
# 🎨 2024年6月17日更新: prettier-java + Eclipse統合フォーマット環境対応

# 除外ブランチリスト（静的解析をスキップするブランチ）
SKIP_BRANCHES=(
    "main"
    "master" 
    "master-test"
    "develop"
    "release/*"
    "hotfix/*"
)

# 現在のブランチ名を取得
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# ブランチ除外チェック
for skip_branch in "${SKIP_BRANCHES[@]}"; do
    if [[ "$CURRENT_BRANCH" == $skip_branch ]]; then
        echo "🔄 ブランチ '$CURRENT_BRANCH' は静的解析をスキップします"
        echo "✅ コミットを続行します（品質チェック無し）"
        exit 0
    fi
done

echo "🚀 Pre-commit hook: 統合フォーマット環境 + 厳格な品質ゲート開始"
echo "📍 現在のブランチ: $CURRENT_BRANCH"
echo "🎨 統合フォーマット: Prettier Java + Eclipse Formatter"
echo "⚠️  注意: 品質違反が検出された場合、コミットは阻止されます"

# プロジェクトディレクトリに移動
cd project

# Phase 1: 統合フォーマット実行 🎨 NEW
echo "🎨 統合フォーマット実行中..."
if [ -f "./format-and-check.sh" ]; then
    echo "  • 統合フォーマットスクリプト実行: ./format-and-check.sh"
    if ./format-and-check.sh > /dev/null 2>&1; then
        echo "✅ 統合フォーマット完了 (Space→Tab変換 + Prettier Java + Eclipse Formatter)"
    else
        echo "❌ 統合フォーマットエラーが発生しました"
        echo "  手動実行して確認してください: cd project && ./format-and-check.sh"
        echo "コミットを中断します。"
        exit 1
    fi
else
    echo "⚠️  統合フォーマットスクリプトが見つかりません"
    echo "  レガシーフォーマット（Google Java Format）にフォールバック..."
    
    if mvn fmt:format -q 2>/dev/null; then
        echo "✅ Google Java Format完了（レガシー）"
    else
        echo "❌ フォーマットエラーが発生しました"
        echo "コミットを中断します。"
        exit 1
    fi
fi

# フォーマット後の変更をステージングエリアに追加
git add . 2>/dev/null || true

# Phase 2: コンパイルチェック（必須）
echo "🔍 コンパイルチェック実行中..."
if ! mvn compile -q -DskipTests 2>/dev/null; then
    echo "❌ コンパイルエラーが検出されました"
    echo "コミットを中断します。先にコンパイルエラーを修正してください。"
    exit 1
fi
echo "✅ コンパイル成功"

# Phase 3: 厳格スタイルチェック（違反時はコミット阻止）
echo "🎨 厳格スタイルチェック実行中..."
mvn checkstyle:check -Dcheckstyle.config.location=checkstyle-strict.xml -q 2>/dev/null
CHECKSTYLE_EXIT_CODE=$?
if [ $CHECKSTYLE_EXIT_CODE -ne 0 ]; then
    echo "❌ Checkstyle違反が検出されました (終了コード: $CHECKSTYLE_EXIT_CODE)"
    echo ""
    echo "🔍 違反の詳細確認:"
    echo "mvn checkstyle:check -Dcheckstyle.config.location=checkstyle-strict.xml"
    echo ""
    echo "📝 主要な修正項目:"
    echo "• クラス名: PascalCase (例: MyClass)"
    echo "• メソッド/変数名: camelCase (例: myMethod)"
    echo "• 定数名: UPPER_CASE (例: MAX_COUNT)"
    echo "• JavaDoc: publicメソッド・クラスに必須"
    echo "• マジックナンバー禁止"
    echo ""
    echo "コミットを中断します。違反を修正してから再度コミットしてください。"
    exit 1
fi
echo "✅ Checkstyle品質チェック完了"

# Phase 4: PMD品質チェック（違反時はコミット阻止）
echo "🔍 PMD品質チェック実行中..."
mvn pmd:check -q 2>/dev/null
PMD_EXIT_CODE=$?
if [ $PMD_EXIT_CODE -ne 0 ]; then
    echo "❌ PMD品質違反が検出されました (終了コード: $PMD_EXIT_CODE)"
    echo ""
    echo "🔍 違反の詳細確認:"
    echo "mvn pmd:check"
    echo ""
    echo "📝 主要な修正項目:"
    echo "• 複雑度削減: メソッド長30行以下、ネスト2レベル以下"
    echo "• 未使用変数・インポートの削除"
    echo "• 空のキャッチブロック禁止"
    echo "• ハードコードされた値の禁止"
    echo ""
    echo "コミットを中断します。品質問題を修正してから再度コミットしてください。"
    exit 1
fi
echo "✅ PMD品質チェック完了"

# Phase 5: SpotBugsバグ検出（違反時はコミット阻止）
echo "🐛 SpotBugsバグ検出実行中..."
mvn spotbugs:check -q 2>/dev/null
SPOTBUGS_EXIT_CODE=$?
if [ $SPOTBUGS_EXIT_CODE -ne 0 ]; then
    echo "❌ SpotBugsでバグパターンが検出されました (終了コード: $SPOTBUGS_EXIT_CODE)"
    echo ""
    echo "🔍 違反の詳細確認:"
    echo "mvn spotbugs:check"
    echo ""
    echo "📝 主要な修正項目:"
    echo "• null pointer例外リスク"
    echo "• リソースリーク"
    echo "• equals/hashCode実装問題"
    echo "• セキュリティ脆弱性"
    echo ""
    echo "コミットを中断します。バグパターンを修正してから再度コミットしてください。"
    exit 1
fi
echo "✅ SpotBugsバグ検出完了"

echo ""
echo "🎉 全ての品質チェックに合格しました！"
echo "✅ 統合フォーマット: 適用済み (Prettier Java + Eclipse Formatter)"
echo "✅ コンパイル: 成功"
echo "✅ Checkstyle: 合格"
echo "✅ PMD: 合格"  
echo "✅ SpotBugs: 合格"
echo ""
echo "🎨 統合フォーマット環境の特徴:"
echo "  • タブインデント統一 (tabWidth: 4)"
echo "  • Cross-IDE対応 (Eclipse + VS Code + Prettier)"
echo "  • 設定ファイル駆動フォーマット"
echo ""
echo "📊 品質ゲート: 通過 - コミットを続行します"
